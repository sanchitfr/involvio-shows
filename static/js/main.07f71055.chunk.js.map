{"version":3,"sources":["components/show-view/Button.js","components/show-view/ShowItem.js","components/show-view/ShowView.js","redux/actions/favourites.js","redux/actions/types.js","components/show-view/ShowFavourites.js","App.js","redux/reducers/favourites.js","redux/reducers/index.js","store.js","index.js"],"names":["Button","handleClick","arg","name","onClick","e","ShowItem","show","action","buttonName","className","src","image","medium","alt","style","width","connect","addFavourites","dispatch","type","payload","useState","shows","updateShows","fetchShows","a","fetch","response","json","data","useEffect","to","map","key","id","state","Favourites","removeFavourite","App","exact","path","component","ShowView","ShowFavourites","initialState","loading","localStorage","setItem","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07f71055.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = ({handleClick, arg, name}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={e => handleClick(arg)}>{name}</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nimport './ShowItem.css';\r\n\r\nconst ShowItem = ({ show, action, buttonName }) => {\r\n\r\n    return (\r\n          <div className=\"card\">\r\n            <img src={show.image.medium} alt=\"Avatar\" style={{width:\"100%\"}}/>\r\n            <div className=\"container\">\r\n                <h5>{show.name}</h5> \r\n            </div>\r\n            <Button handleClick={action} arg={show} name={buttonName}/>\r\n        </div>  \r\n    )\r\n}\r\n\r\n\r\nexport default ShowItem;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './ShowView.css';\r\n\r\nimport {addFavourites} from '../../redux/actions/favourites';\r\nimport ShowItem from './ShowItem';\r\n\r\nconst ShowView = ({ addFavourites }) => {\r\n    const [shows, updateShows] = useState();\r\n    \r\n    const fetchShows = async () => {\r\n        const response = await fetch('https://api.tvmaze.com/shows');\r\n        const data = await response.json();\r\n        updateShows(data);\r\n    }\r\n    useEffect(() => {\r\n        fetchShows();\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <h1>\r\n              TV Shows\r\n              <Link to='/favourites'><button className='fav-button'>Favourites</button></Link>\r\n            </h1>\r\n            <div className='grid-container'>\r\n                {\r\n                    shows &&\r\n                    shows.map(show => <div className='grid-item'><ShowItem show={show} action={addFavourites} key={show.id} buttonName=\"Add to Favourites\"/></div>)  \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { addFavourites })(ShowView);\r\n","import { ADD_FAVOURITE, REMOVE_FAVOURITE } from './types';\r\n\r\nexport const addFavourites = (show) => dispatch => {\r\n    dispatch({\r\n        type: ADD_FAVOURITE,\r\n        payload: show\r\n    })\r\n};\r\n\r\nexport const removeFavourite = (show) => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_FAVOURITE,\r\n        payload : show.id\r\n    })\r\n}","export const ADD_FAVOURITE = 'ADD_FAVOURITE';\r\nexport const REMOVE_FAVOURITE = 'REMOVE_FAVOURITE';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ShowItem from './ShowItem';\r\nimport { removeFavourite } from '../../redux/actions/favourites';\r\n\r\nimport './ShowView.css'\r\nconst ShowFavourites = ({shows, removeFavourite}) => {\r\n    return (\r\n        <div>\r\n            <h1>Favourites</h1>\r\n            <Link to='/involvio-shows'>Back to all</Link>\r\n            <div className='grid-container'>\r\n                {\r\n                    shows &&\r\n                    shows.map(show => <div className='grid-item'><ShowItem show={show} action={removeFavourite} key={show.id} buttonName=\"Remove from Favourites\"/></div>)  \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    shows : state.Favourites.shows\r\n})\r\n\r\nexport default connect(mapStateToProps, { removeFavourite })(ShowFavourites);\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n\nimport ShowView from './components/show-view/ShowView';\nimport ShowFavourites from './components/show-view/ShowFavourites';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route exact path='/involvio-shows' component={ShowView}/>\n            <Route path='/favourites' component={ShowFavourites}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_FAVOURITE, REMOVE_FAVOURITE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    shows : [],\r\n    loading : true\r\n}\r\n\r\nconst Favourites = (state=initialState, action) => {\r\n    const { payload, type } = action;\r\n\r\n    switch(type){\r\n        case ADD_FAVOURITE:\r\n            state.shows = [payload, ...state.shows]\r\n            localStorage.setItem('favourites', state.shows)\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        case REMOVE_FAVOURITE:\r\n            return {\r\n                ...state,\r\n                shows : state.shows.filter(show => show.id !== payload),\r\n                loading: false\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Favourites;","import {combineReducers} from 'redux';\r\nimport Favourites from './favourites';\r\n\r\nexport default combineReducers({\r\n    Favourites\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport {Provider} from 'react-redux';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}